# Application configuration
spring.application.name=api-gateway
server.port=8443

## SSL Configuration
server.ssl.enabled=true
#server.ssl.key-store=classpath:api-gateway-keystore.p12
#server.ssl.key-store-password=changeit
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=api-gateway
#server.ssl.trust-store=classpath:ca-truststore.p12
#server.ssl.trust-store-password=changeit
#server.ssl.client-auth=need
rver.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=springboot
# Service Discovery with HTTPS
eureka.client.service-url.defaultZone=https://localhost:8761/eureka/

# Eureka Instance Configuration for HTTPS
eureka.instance.secure-port-enabled=true
eureka.instance.non-secure-port-enabled=false
eureka.instance.status-page-url=https://localhost:${server.port}/actuator/info
eureka.instance.health-check-url=https://localhost:${server.port}/actuator/health
eureka.instance.home-page-url=https://localhost:${server.port}/

# Kafka Configuration (assuming internal, can stay plaintext or configure SSL if needed)
spring.kafka.bootstrap-servers=localhost:9092

# JWT Configuration
jwt.secret=koPbgbkWib4BshQEr4La8XgpfjzRej8BmEwCEzOpAXcI6Pj1MUQxiMykzWKgBuDklYWJJi0oy9UrqKN5odb66A==
jwt.expiration=86400000

# Gateway Discovery
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ? Route 1: Public authentication endpoints (NO Authentication filter)
spring.cloud.gateway.routes[0].id=auth-service-public
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**

# ? Route 2: Public user registration and login (NO Authentication filter)
spring.cloud.gateway.routes[1].id=user-service-public
spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/users/register,/api/users/login

# ? Route 3: SECURED User Service endpoints (WITH Authentication filter)
spring.cloud.gateway.routes[2].id=user-service-secured
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/users/**
spring.cloud.gateway.routes[2].filters[0]=Authentication

# ? Route 4: SECURED Product Service endpoints
spring.cloud.gateway.routes[3].id=product-service-secured
spring.cloud.gateway.routes[3].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[3].filters[0]=Authentication

# ? Route 5: SECURED Media Service endpoints
spring.cloud.gateway.routes[4].id=media-service-secured
spring.cloud.gateway.routes[4].uri=lb://MEDIA-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/media/**
spring.cloud.gateway.routes[4].filters[0]=Authentication

# HTTP to HTTPS redirect (optional but recommended)
spring.cloud.gateway.routes[5].id=http-to-https-redirect
spring.cloud.gateway.routes[5].predicates[0]=Path=/**
spring.cloud.gateway.routes[5].filters[0]=RedirectTo=302,https://localhost:${server.port}/